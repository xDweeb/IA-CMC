1- Creation the database

CREATE DATABASE cmcformation;
USE cmcformation;

CREATE TABLE ETUDIANT(
    numCINEtu VARCHAR(10),
    nomEtu VARCHAR(45),
    prenomEtu VARCHAR(45),
    dateNaissance DATE,
    adressEtu VARCHAR(45),
    villeEtu VARCHAR(45),
    niveauEtu VARCHAR(45),
    PRIMARY KEY(numCINEL)
);

CREATE TABLE Inscription(
    codeSess INT,
    numCINEL VARCHAR(10),
    typeCours VARCHAR(45),
    PRIMARY KEY(codeSess, numCINEL),
    FOREIGN KEY(codeSess) REFERENCES SESSION(codeSess),
    FOREIGN KEY(numCINEL) REFERENCES ETUDIANT(numCINEL)
);

CREATE TABLE SESSION(
    codeSess INT,
    nomSess VARCHAR(45),
    dateDebut DATE,
    dateFin VARCHAR(45),
    PRIMARY KEY(codeSess)
);

CREATE TABLE SPECIALITE(
    codeSpec INT,
    nomSpec VARCHAR(45),
    descSpec VARCHAR(45),
    PRIMARY KEY(codeSpec)
);

CREATE TABLE Formation(
    codeForm INT,
    titreForm VARCHAR(45),
    dureeForm DOUBLE,
    prixForm DOUBLE,
    SESSION_codeSess INT,
    PRIMARY KEY(codeForm),
    FOREIGN KEY(SESSION_codeSess) REFERENCES SESSION(codeSess)
);

CREATE TABLE Catalogue(
    codeSpec INT,
    codeForm INT,
    PRIMARY KEY(codeSpec, codeForm),
    FOREIGN KEY(codeSpec) REFERENCES SPECIALITE(codeSpec),
    FOREIGN KEY(codeForm) REFERENCES Formation(codeForm)
);

2- To add data in table ETUDIANT

INSERT INTO ETUDIANT (numCINEL, nomEtu, prenomEtu, dateNaissance, adressEtu, villeEtu, niveauEtu)
VALUES 
('AB234567', 'Alami', 'Ahmad', '1986-01-01', 'Rue du port, 13', 'Tanger', 'bac'),
('G5346789', 'Toumi', 'Aicha', '2000-03-12', 'N12 immeuble Jaouhara', 'Casablanca', 'Master'),
('C0987265', 'Souni', 'Sanaa', '1998-04-30', 'Place du peuple n 2', 'Tanger', 'Niveau bac'),
('D2356903', 'Idrissi Alami', 'Mohammed', '1996-05-05', 'Lotissement najah,', 'Rabat', 'Bac + 4'),
('Y1234987', 'Ouled thami', 'Ali', '1979-12-04', 'La ville haute,rue chouhada n 6', 'Tanger', 'Bachelor'),
('J3578902', 'Ben Omar', 'Abd Allah', '1990-06-25', 'La ville Amina n12 bir rami', 'Kenitra', 'Phd'),
('F9827363', 'El Khattabi', 'Fatima Zohra', '1997-01-10', 'immeuble iftikhar n13 ettakaddoum', 'Rabat', 'Bac +2');

-To show data in table ETUDIANT

-for all data
SELECT * FROM ETUDIANT;
-for specific data
SELECT numCINEL, nomEtu, prenomEtu, dateNaissance, adressEtu, villeEtu, niveauEtu FROM ETUDIANT;

3- To add data in table SESSION

INSERT INTO SESSION (codeSess, nomSess, dateDebut, dateFin)
VALUES 
(1101, 'Session1101', '2022-01-02', '2022-01-14'),
(1102, 'Session 1102', '2022-02-03', '2022-02-15'),
(1201, 'Session 1201', '2022-03-04', '2022-03-18'),
(1202, 'Session 1202', '2022-04-05', '2022-04-19'),
(1301, 'Session 1301', '2022-01-06', '2022-01-21'),
(1302, 'Session 1302', '2022-05-07', '2022-05-22'),
(1303, 'Session 1303', '2022-06-08', '2022-06-23'),
(1401, 'Session 1401', '2022-09-01', '2022-09-11'),
(1402, 'Session 1402', '2022-08-08', '2022-08-18'),
(1501, 'Session 1501', '2022-11-11', '2022-12-01'),
(1502, 'Session 1502', '2022-09-12', '2022-10-02'),
(1601, 'Session 1601', '2022-09-13', '2022-09-25'),
(1602, 'Session 1602', '2022-10-14', '2022-10-26'),
(1104, 'Session 1104', '2022-10-15', '2022-10-27'),
(1203, 'Session 1203', '2022-11-16', '2022-11-30'),
(1204, 'Session 1204', '2022-12-17', '2022-12-31');

-To show data in table SESSION
-for all data
SELECT * FROM SESSION;
-for specific data
SELECT codeSess, nomSess, dateDebut, dateFin FROM SESSION;

4- To add data in table SPECIALITE

INSERT INTO SPECIALITE (codeSpec, nomSpec, descSpec)
VALUES 
(101, 'Genie logiciel et developpement', 'GL'),
(102, 'Data', 'Data engineering'),
(103, 'Langues', 'Anglais, Francais'),
(104, 'Communication', 'Communication'),
(105, 'Securite', 'Reseaux et securite');

-To show all data in table SPECIALITE
SELECT * FROM SPECIALITE;

5- To add data in table Formation

INSERT INTO Formation (codeForm, titreForm, dureeForm, prixForm, SESSION_codeSess)
VALUES 
(11, 'Programming Java', 12, 3600, 1101),
(12, 'Web Development', 14, 4200, 1102),
(13, 'Anglais technique', 15, 3750, 1301),
(14, 'Communication', 10, 2500, 1401),
(15, 'Intelligence Artificielle', 20, 6000, 1501),
(16, 'Soft Skills', 12, 3000, 1601);

-To show all data in table Formation
SELECT * FROM Formation;

6- To add data in table Catalogue

INSERT INTO Catalogue (codeSpec, codeForm)
VALUES 
(101, 11),
(101, 12),
(102, 15),
(101, 15),
(103, 13),
(104, 13),
(104, 14),
(104, 16);

-To show all data in table Catalogue
SELECT * FROM Catalogue;

7- To add data in table Inscription

INSERT INTO Inscription (codeSess, numCINEL, typeCours)
VALUES 
(1101, 'AB234567', 'Distanciel'),
(1101, 'G5346789', 'Distanciel'),
(1101, 'C0987265', 'Distanciel'),
(1101, 'D2356903', 'Distanciel'),
(1101, 'Y1234987', 'Distanciel'),
(1101, 'J3578902', 'Distanciel'),
(1101, 'F9827363', 'Distanciel'),
(1201, 'AB234567', 'Présentiel'),
(1201, 'G5346789', 'Présentiel'),
(1201, 'C0987265', 'Présentiel'),
(1201, 'D2356903', 'Présentiel'),
(1201, 'Y1234987', 'Présentiel'),
(1201, 'J3578902', 'Présentiel'),
(1302, 'AB234567', 'Présentiel'),
(1302, 'G5346789', 'Distanciel'),
(1302, 'C0987265', 'Présentiel'),
(1302, 'D2356903', 'Présentiel'),
(1302, 'Y1234987', 'Présentiel'),
(1401, 'G5346789', 'Distanciel'),
(1401, 'C0987265', 'Distanciel'),
(1401, 'D2356903', 'Distanciel'),
(1401, 'Y1234987', 'Distanciel'),
(1401, 'J3578902', 'Distanciel'),
(1401, 'F9827363', 'Distanciel'),
(1501, 'AB234567', 'Distanciel'),
(1501, 'G5346789', 'Présentiel'),
(1501, 'C0987265', 'Distanciel'),
(1501, 'D2356903', 'Présentiel'),
(1501, 'Y1234987', 'Présentiel'),
(1501, 'J3578902', 'Présentiel'),
(1501, 'F9827363', 'Presenciel');

-To show all data in table Inscription
SELECT * FROM Inscription;

-- To show all data in table ETUDIANT and SESSION

SELECT * FROM ETUDIANT, SESSION;

1. Dans la table ETUDIANT,modifier les données de la colonne « niveauEtu » comme suit :

Ancienne valeur
Master
Bachelor
Phd
Nouvelle Valeur
Master == Bac+5
Bachelor == Bac+4
Phd == Doctorat

correction 1

UPDATE ETUDIANT
SET niveauEtu = 'Bac+5'
WHERE niveauEtu = 'Master';

UPDATE ETUDIANT
SET niveauEtu = 'Bac+4'
WHERE niveauEtu = 'Bachelor';

UPDATE ETUDIANT
SET niveauEtu = 'Doctorat'
WHERE niveauEtu = 'Phd';

2. Renommer le titre de la formation 11 avec « développement Java»

correction 2

UPDATE Formation
SET titreForm = 'Développement Java'
WHERE codeForm = 11;

3. Ajouter une colonne « numlnscription » dans la table INSCRIPTION. La valeur de cette colonne sera la concaténation du codesess etnumCINEtu→Utiliser la fonction concat()

correction 3

ALTER TABLE Inscription
ADD numlnscription VARCHAR(20);

UPDATE Inscription
SET numlnscription = CONCAT(codeSess, numCINEL);

4. Il y a eu une erreur lors de l'inscription de l'étudiant dont le nom est « Alami ». Sa date de naissance est le 02 Janvier 1987, et il est de la villede Kenitra.

correction 4

UPDATE ETUDIANT
SET dateNaissance = '1987-01-02', villeEtu = 'Kenitra'
WHERE nomEtu = 'Alami';

5.L'étudiante Aicha souhaite rendre tous ses cours en distanciel.

correction 5

UPDATE Inscription
SET typeCours = 'Distanciel'
WHERE numCINEL = 'G5346789';

PARTIR 3

1. Consulter le contenu de toutes les tables du schéma CMCFORMATION.

correction 1

SELECT * FROM ETUDIANT;
SELECT * FROM SESSION;
SELECT * FROM SPECIALITE;
SELECT * FROM Formation;
SELECT * FROM Catalogue;
SELECT * FROM Inscription;

2. Donner la list des étudiants qui sont de la ville de Tanger.

correction 2

SELECT * FROM ETUDIANT
WHERE villeEtu = 'Tanger';

3. Donner la liste des formations qui coutent plus de 3000 DH.

correction 3

SELECT * FROM Formation
WHERE prixForm > 3000;

4. Pour chaque formation, donner le prix journalier.(supposant que la durée renseignée est en jours)

correction 4

SELECT titreForm, prixForm/dureeForm AS 'Prix journalier'
FROM Formation;

5. Donner la liste des sessions ouvertes de la formation dont le code est 11.

correction 5

SELECT * FROM SESSION
WHERE codeSess IN (SELECT SESSION_codeSess FROM Formation WHERE codeForm = 11);

6. Donner la liste des numéros CIN des étudiants inscrits dans la session 1302 classés par ordre alphabétique.

correction 6

SELECT numCINEL FROM Inscription
WHERE codeSess = 1302
ORDER BY numCINEL;

7. Donner la liste des spécialités Actives.

correction 7

SELECT * FROM SPECIALITE
WHERE codeSpec IN (SELECT codeSpec FROM Catalogue);

8. Combien y a-t-il d'étudiants ?

correction 8

SELECT COUNT(*) AS 'Nombre d''etudiants' FROM ETUDIANT;

9. Donner l'age de chaque étudiant.(utiliser les fonctions comme : datediff(), CURDATE(), timestampdiff(), now(), etc.)

correction 9

SELECT nomEtu, prenomEtu, datediff(CURDATE(), dateNaissance)/365 AS 'Age'
FROM ETUDIANT;

10. Quelle est la plus chère des formations ? et la moins chère ?

correction 10

SELECT titreForm, prixForm FROM Formation
WHERE prixForm = (SELECT MAX(prixForm) FROM Formation);

SELECT titreForm, prixForm FROM Formation
WHERE prixForm = (SELECT MIN(prixForm) FROM Formation);

11. donne pour chaque des etudiants le nombre d'inscriptions.

correction 11

SELECT nomEtu, prenomEtu, COUNT(*) AS 'Nombre d''inscriptions'
FROM ETUDIANT, Inscription
WHERE ETUDIANT.numCINEL = Inscription.numCINEL
GROUP BY ETUDIANT.numCINEL;

15. Donner pour chaque session le nombre d'inscriptions distancielles et présentielle.

correction 15

SELECT codeSess, COUNT(*) AS 'Nombre d''inscriptions distancielles'
FROM Inscription
WHERE typeCours = 'Distanciel'
GROUP BY codeSess;

SELECT codeSess, COUNT(*) AS 'Nombre d''inscriptions présentielle'
FROM Inscription
WHERE typeCours = 'Présentiel'
GROUP BY codeSess;

16. lister pour chaque formation ses sessions ouvertes.Afficher le titre de la formation, le nom de la session, la date de début et la date de fin.

correction 16

CREATE VIEW FormationSession AS 
SELECT titreForm, nomSess, dateDebut, dateFin
FROM Formation, SESSION
WHERE Formation.SESSION_codeSess = SESSION.codeSess;

SELECT * FROM FormationSession;

17; cree une vue qui donne tout les etudiants inscrits de la ville de Rabat.

correction 17

CREATE VIEW EtudiantRabat AS
SELECT * FROM ETUDIANT
WHERE villeEtu = 'Rabat';

SELECT * FROM EtudiantRabat;

18. Créer une table temporaire qui contient les etudiants dans la ville de Tanger.

correction 18

CREATE TEMPORARY TABLE EtudiantTanger AS
SELECT * FROM ETUDIANT
WHERE villeEtu = 'Tanger';

SELECT * FROM EtudiantTanger;

Partie 2 :

1. créé 4 utilisateur : Use User1@localhost avec le Modpass: Modep@sse1 / User2@localhost : Modep@sse2 / User3@localhost : Modep@sse3 / User4@localhost : Modep@sse4

correction 1

CREATE USER 'User1'@'localhost' IDENTIFIED BY 'Modep@sse1';
CREATE USER 'User2'@'localhost' IDENTIFIED BY 'Modep@sse2';
CREATE USER 'User3'@'localhost' IDENTIFIED BY 'Modep@sse3';
CREATE USER 'User4'@'localhost' IDENTIFIED BY 'Modep@sse4';

2. Vérifier les utilisateurs qui existent sur le serveur. 

correction 2

SELECT User FROM mysql.user;
or
SELECT user, host FROM mysql.user;

3.Donel les privilège suivant aux utilisateurs comme suit : User1 : Select sur tout les objet de la base de données. / User2 : INSERT sur les tables Étudiant, Formation / Use3: tous les privilèges sur la base de données. / User4 : Update sur la table ETUDIANT 

correction 3
-User
GRANT SELECT ON cmcformation.* TO 'User1'@'localhost';

-User2
GRANT INSERT ON cmcformation.ETUDIANT TO 'User2'@'localhost';
GRANT INSERT ON cmcformation.Formation TO 'User2'@'localhost';

-User3
GRANT ALL PRIVILEGES ON cmcformation.* TO 'User3'@'localhost';

-User4
GRANT UPDATE ON cmcformation.ETUDIANT TO 'User4'@'localhost';

Flush privileges;

4. Vérifier les privilèges attribués à chacun de ces utilisateurs à l'aide de la commande SHOW GRANTS For User name@localhost.

correction 4

SHOW GRANTS FOR 'User1'@'localhost';
SHOW GRANTS FOR 'User2'@'localhost';
SHOW GRANTS FOR 'User3'@'localhost';
SHOW GRANTS FOR 'User4'@'localhost';


